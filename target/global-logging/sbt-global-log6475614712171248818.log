[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\johan\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\johan\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 17.0.2)
[debug]       Load.loadUnit: plugins took 127.4145ms
[debug]       Load.loadUnit: defsScala took 0.6312ms
[debug] [Loading] Scanning directory C:\Users\johan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\johan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.8659 ms
[debug]           Load.resolveProject(global-plugins) took 42.7418ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\johan\.sbt\1.0\plugins, plugins: List(<none>))) took 84.409ms
[debug] [Loading] Done in C:\Users\johan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.4509ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3249ms
[debug]     Load.loadUnit(file:/C:/Users/johan/.sbt/1.0/plugins/, ...) took 241.0689ms
[debug]   Load.apply: load took 400.6671ms
[debug]   Load.apply: resolveProjects took 7.365ms
[debug]   Load.apply: finalTransforms took 59.2719ms
[debug]   Load.apply: config.delegates took 8.969ms
[debug]   Load.apply: Def.make(settings)... took 398.4088ms
[debug]   Load.apply: structureIndex took 105.5812ms
[debug]   Load.apply: mkStreams took 2.9081ms
[info] loading global plugins from C:\Users\johan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6052.2242ms
[debug]           Load.loadUnit: plugins took 22.9513ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\johan\IdeaProjects\GameEnjin\project
[debug]             Load.loadUnit: mkEval took 5.4052ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\johan\IdeaProjects\GameEnjin\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9909 ms
[info] loading settings for project gameenjin-build from idea.sbt ...
[debug]               Load.resolveProject(gameenjin-build) took 4.1194ms
[debug]             Load.loadTransitive: finalizeProject(Project(id gameenjin-build, base: C:\Users\johan\IdeaProjects\GameEnjin\project, plugins: List(<none>))) took 5.4611ms
[debug] [Loading] Done in C:\Users\johan\IdeaProjects\GameEnjin\project, returning: (gameenjin-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1810.7432ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.2612ms
[debug]         Load.loadUnit(file:/C:/Users/johan/IdeaProjects/GameEnjin/project/, ...) took 1838.62ms
[debug]       Load.apply: load took 1839.6197ms
[debug]       Load.apply: resolveProjects took 0.0784ms
[debug]       Load.apply: finalTransforms took 6.3248ms
[debug]       Load.apply: config.delegates took 0.2202ms
[debug]       Load.apply: Def.make(settings)... took 49.1452ms
[debug]       Load.apply: structureIndex took 18.8205ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\johan\IdeaProjects\GameEnjin\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4823.8143ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\johan\IdeaProjects\GameEnjin
[debug]       Load.loadUnit: mkEval took 0.1673ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2059 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 34.3826ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\johan\IdeaProjects\GameEnjin, plugins: List(<none>))) took 36.8811ms
[debug] [Loading] Done in C:\Users\johan\IdeaProjects\GameEnjin, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1027.4797ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.5906ms
[debug]   Load.loadUnit(file:/C:/Users/johan/IdeaProjects/GameEnjin/, ...) took 5865.5169ms
[debug] Load.apply: load took 5866.7484ms
[debug] Load.apply: resolveProjects took 0.097ms
[debug] Load.apply: finalTransforms took 23.0904ms
[debug] Load.apply: config.delegates took 0.2197ms
[debug] Load.apply: Def.make(settings)... took 46.8441ms
[debug] Load.apply: structureIndex took 17.5948ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to gameEnjin (in build file:/C:/Users/johan/IdeaProjects/GameEnjin/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53238 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53238, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to gameEnjin (in build file:/C:/Users/johan/IdeaProjects/GameEnjin/)
[debug] > Exec(idea-shell, None, None)
